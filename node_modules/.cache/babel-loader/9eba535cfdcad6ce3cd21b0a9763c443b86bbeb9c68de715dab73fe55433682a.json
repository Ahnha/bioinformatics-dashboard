{"ast":null,"code":"var _jsxFileName = \"C:\\\\bioinformatics-dashboard\\\\src\\\\components\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport AppRoutes from '../routes/AppRoutes';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [navbarPosition, setNavbarPosition] = useState('navbar-top');\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      navbarPosition: navbarPosition,\n      setNavbarPosition: setNavbarPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: getContentStyle(navbarPosition),\n      children: /*#__PURE__*/_jsxDEV(AppRoutes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n// This computes padding for the main content based on the navbar position\n_s(App, \"tjxVEEjEtdQIIM6mbm9TlwkLu1M=\");\n_c = App;\nconst getContentStyle = position => {\n  switch (position) {\n    case 'navbar-top':\n      return {\n        paddingTop: '50px'\n      };\n    case 'navbar-bottom':\n      return {\n        paddingBottom: '50px'\n      };\n    case 'navbar-left':\n      return {\n        paddingLeft: '150px'\n      };\n    case 'navbar-right':\n      return {\n        paddingRight: '150px'\n      };\n    default:\n      return {};\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","AppRoutes","Navbar","jsxDEV","_jsxDEV","App","_s","navbarPosition","setNavbarPosition","children","fileName","_jsxFileName","lineNumber","columnNumber","style","getContentStyle","_c","position","paddingTop","paddingBottom","paddingLeft","paddingRight","$RefreshReg$"],"sources":["C:/bioinformatics-dashboard/src/components/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport AppRoutes from '../routes/AppRoutes';\r\nimport Navbar from './Navbar';\r\n\r\nconst App: React.FC = () => {\r\n    const [navbarPosition, setNavbarPosition] = useState<string>('navbar-top');\r\n\r\n    return (\r\n        <BrowserRouter>\r\n            <Navbar\r\n                navbarPosition={navbarPosition}\r\n                setNavbarPosition={setNavbarPosition}\r\n            />\r\n            <div style={getContentStyle(navbarPosition)}>\r\n                <AppRoutes />\r\n            </div>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\n// This computes padding for the main content based on the navbar position\r\nconst getContentStyle = (position: string): React.CSSProperties => {\r\n    switch (position) {\r\n        case 'navbar-top':\r\n            return { paddingTop: '50px' };\r\n        case 'navbar-bottom':\r\n            return { paddingBottom: '50px' };\r\n        case 'navbar-left':\r\n            return { paddingLeft: '150px' };\r\n        case 'navbar-right':\r\n            return { paddingRight: '150px' };\r\n        default:\r\n            return {};\r\n    }\r\n};\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,kBAAkB;AAChD,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAS,YAAY,CAAC;EAE1E,oBACIK,OAAA,CAACJ,aAAa;IAAAS,QAAA,gBACVL,OAAA,CAACF,MAAM;MACHK,cAAc,EAAEA,cAAe;MAC/BC,iBAAiB,EAAEA;IAAkB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxC,CAAC,eACFT,OAAA;MAAKU,KAAK,EAAEC,eAAe,CAACR,cAAc,CAAE;MAAAE,QAAA,eACxCL,OAAA,CAACH,SAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAExB,CAAC;;AAED;AAAAP,EAAA,CAhBMD,GAAa;AAAAW,EAAA,GAAbX,GAAa;AAiBnB,MAAMU,eAAe,GAAIE,QAAgB,IAA0B;EAC/D,QAAQA,QAAQ;IACZ,KAAK,YAAY;MACb,OAAO;QAAEC,UAAU,EAAE;MAAO,CAAC;IACjC,KAAK,eAAe;MAChB,OAAO;QAAEC,aAAa,EAAE;MAAO,CAAC;IACpC,KAAK,aAAa;MACd,OAAO;QAAEC,WAAW,EAAE;MAAQ,CAAC;IACnC,KAAK,cAAc;MACf,OAAO;QAAEC,YAAY,EAAE;MAAQ,CAAC;IACpC;MACI,OAAO,CAAC,CAAC;EACjB;AACJ,CAAC;AAED,eAAehB,GAAG;AAAC,IAAAW,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}